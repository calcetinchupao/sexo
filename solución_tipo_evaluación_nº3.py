# -*- coding: utf-8 -*-
"""Solución_Tipo_Evaluación_Nº3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jp_J7sH7wh9NYlUuBjD1B4w61ZB7GC57
"""

#ESTA SOLUCION NO TIENE AUN IMPLEMENTADO LA CARGA DE ARCHIVO Y LAS DOS OPCIONES EXTRA.
#Listar Vehiculos - Eliminar Vehiculos


import csv  # Importa el módulo csv para leer y escribir archivos CSV
import random  # Importa el módulo random para generar números aleatorios

# Definición de variables globales para almacenar información de vehículos
tipo = ""            # Tipo de vehículo (ej. automóvil, camioneta)
patente = ""         # Número de patente del vehículo
marca = ""           # Marca del vehículo
precio = 0           # Precio del vehículo
lista_multa = []     # Lista para almacenar información de multas del vehículo
fecha_registro = ""  # Fecha de registro del vehículo
nombre_cliente = ""  # Nombre del cliente propietario del vehículo
respuesta = ""       # Respuesta del usuario sobre la existencia de multas en el vehículo
fecha_multa = ""     # Fecha de la multa
multa = 0            # Monto de la multa
lista_vehiculo = []  # Lista para almacenar información de todos los vehículos registrados

# Función para cargar información de todos los vehículos desde un archivo CSV
def CargarArchivoCSV():
  try:
    print("Cargar Archivo")
    archivo_csv = "datos.csv"
    with open(archivo_csv, "r") as archivo:
        lector = csv.reader(archivo)
        for fila in lector:
            lista_vehiculo.append(fila)
  except:
    print("Error al cargar archivo")


# Función para grabar información de todos los vehículos en un archivo CSV
def GrabarArchivoCSV(list_vehiculo):
  archivo_csv = "datos.csv"
  with open(archivo_csv, "w", newline="") as archivo:
    escritor = csv.writer(archivo)
    escritor.writerow(["Tipo","Patente","Marca","Precio","Multa","Fecha Registro","Nombre Cliente"])
    escritor.writerows(list_vehiculo)

# Función para grabar información de un vehículo
def Grabar():
    try:
        print("Grabar")
        # Solicita información del vehículo al usuario
        tipo = input("Tipo: ")
        patente = input("Patente: ")

        # Valida que la patente tenga 6 caracteres
        while len(patente) != 6:
            print("Patente invalida")
            patente = input("Patente: ")

        marca = input("Marca: ")

        # Valida que la marca tenga entre 2 y 15 caracteres
        while not len(marca) >= 2 and not len(marca) <= 15:
            print("Marca invalida")
            marca = input("Marca: ")

        precio = input("Precio: ")

        # Valida que el precio sea un número y mayor a $5,000,000
        while True:
            if not precio.isnumeric():
                print("Precio invalido")
                precio = input("Precio: ")
            else:
                if int(precio) <= 5000000:
                    print("Precio superior a $5.000.000")
                    precio = input("Precio: ")
                else:
                    precio = int(precio)
                    break

        respuesta = input("El Vehiculo presenta multa (1. Si / 2.No)")

        # Solicita información sobre multas si el usuario indica que el vehículo tiene multas
        while True:
            if respuesta.isnumeric():
                if int(respuesta) == 1:
                    multa = input("Ingrese la multa: ")
                    while True:
                        if not multa.isnumeric():
                            print("Multa invalida")
                            multa = input("Ingrese la multa: ")
                        else:
                            lista_multa = []
                            multa = int(multa)
                            fecha_multa = input("Fecha Multa: ")
                            lista_multa = [multa,fecha_multa]
                            break
                    break
                elif int(respuesta) == 2:
                    lista_multa = ["No Aplica","No Aplica"]
                    break
                else:
                    print("Respuesta invalida")
                    respuesta = input("El Vehiculo presenta multa (1. Si / 2.No)")
            else:
                print("Respuesta invalida")
                respuesta = input("El Vehiculo presenta multa (1. Si / 2.No)")

        fecha_registro = input("Fecha Registro: ")
        nombre_cliente = input("Nombre Cliente: ")

        # Agrega la información del vehículo a la lista de vehículos
        lista_vehiculo.append([tipo,patente,marca,precio,lista_multa,fecha_registro,nombre_cliente])

        GrabarArchivoCSV(lista_vehiculo)
        print("Vehiculo Registrado")
        print(lista_vehiculo)
    except:
        print("Error al grabar")

# Función para buscar información de un vehículo
def Buscar():
    try:
        print("Buscar")
        patente = input("Patente: ")
        while len(patente) != 6:
            print("Patente invalida")
            patente = input("Patente: ")

        # Busca el vehículo por patente en la lista de vehículos
        for items in lista_vehiculo:
            if items[1] == patente:
                # Muestra la información del vehículo encontrado
                print(f"Tipo: {items[0]}")
                print(f"Patente: {items[1]}")
                print(f"Marca: {items[2]}")
                print(f"Precio: {items[3]}")
                # EL item[4] o la lista de multas se almacena dentro del
                # csv como texto quedando "[monto,fecha]" se tiene que volver a tranformar en formato
                # lista para poder imprimir, una forma es:
                items[4] = items[4].replace("[","")
                items[4] = items[4].replace("]","")
                items[4] = items[4].split(",")
                print(f"Multa: {items[4][0]}")
                print(f"Fecha Multa: {items[4][1]}")
                print(f"Fecha Registro: {items[5]}")
                print(f"Nombre Cliente: {items[6]}")
                break
        else:
            print("Vehiculo no registrado")
    except:
        print("Error al buscar")

# Función para imprimir el certificado de un vehículo
def Imprimir():
    try:
        while True:
            patente = input("Patente: ")
            while len(patente) != 6:
                print("Patente invalida")
                patente = input("Patente: ")

            for items in lista_vehiculo:
                if items[1] == patente:
                    print("Imprimir Certificado")
                    print(f"""
                    1.- Emisión de contaminantes ${random.randint(1500,3500)}
                    2.- Anotaciones vigentes ${random.randint(1500,3500)}
                    3.- Multas ${random.randint(1500,3500)}
                    4.- Salir
                    """)
                    opc = input("Opcion: ")
                    while not opc.isnumeric():
                        print("Opcion invalida")
                        opc = input("Opcion: ")
                    opc = int(opc)

                    # Imprime información según la opción seleccionada
                    if opc == 1:
                        print("Emisión de contaminantes")
                        print(f"Patente: {items[1]} - Nombre: {items[6]}")

                    elif opc == 2:
                        print("Anotaciones vigentes")
                        print(f"Patente: {items[1]} - Nombre: {items[6]}")
                    elif opc == 3:
                        print("Multas")
                        print(f"Patente: {items[1]} - Nombre: {items[6]}")
                    elif opc == 4:
                        break
                    else:
                        print("Opcion invalida")
                else:
                    print("Vehiculo no registrado")
            break
    except:
        print("Error al imprimir")

# Menú principal del programa
CargarArchivoCSV()
while True:

    print("""
    Menu

    1) Grabar
    2) Buscar
    3) Imprimir Certificado
    4) Salir

    """)

    opc = input("Opcion: ")

    # Valida que la opción sea un número
    while not opc.isnumeric():
        print("Opcion invalida")
        opc = input("Opcion: ")
    opc = int(opc)

    # Ejecuta la acción según la opción seleccionada
    if opc == 1:
        Grabar()

    elif opc == 2:
        Buscar()
    elif opc == 3:
        Imprimir()
    elif opc == 4:
        print("Gracias")
        break
    else:
        print("Opcion invalida")

